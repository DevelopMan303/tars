#!/bin/sh
VERSION=0.40
Help(){
        echo ""
        echo "This is tars (Vesion: $VERSION). A  wrapper for tar, simple or super."
        echo "99% of tar usage is to extract the archive and all need different"
        echo "parameters."
        echo "tars only need the filename."
        echo "The file will be extracted according the file ending. Because it is"
        echo "Simple, more is not supported."
        echo "dtrx is the big powerful heavy brother."
        echo ""
        echo "The following file types are supported:"
        echo "*.tar"
        echo "*.tar.gz"
        echo "*.tar.bz2"
        echo "*.bz"
        echo ""

        exit 0
}


####################################################################
# Variables
# Every supported type got a FILE_ID and an according string variable
TAR=1
TAR_STR=".tar"

TAR_GZ=2
TAR_GZ_STR="tar.gz"

GZ=3
GZ_STR=".gz"

TAR_BZ=4
TAR_BZ_STR=".tar.bz"
# Idendic to BZ
TAR_BZ2=4
TAR_BZ2_STR=".tar.bz2"

BZ=5
BZ_STR=".bz"
BZ2=5
BZ2_STR=".bz2"

####################################################################
# Functions

## @brief       Do the real work. Finally we relay extract!
## @param       $1 file (e.g. ~/test/tar.gz)
## @param       $2 (int) type enum
## @return      true or false
DoExtract()
{
        FILE_NAME="$1"
        FILE_TYPE="$2"
        echo "DoExtract " $FILE_NAME " " $FILE_TYPE

        # switch between supported types. Case could been selected, but if statement is better portable
        if [ $FILE_TYPE -eq $TAR ] ; then
                echo "do tar work"
                tar xfv "$FILE_NAME"
        fi
        if [ $FILE_TYPE -eq $TAR_GZ ] ; then
                echo "do tar.gz  work"
                tar xfzv "$FILE_NAME"
        fi
        if [ $FILE_TYPE -eq $GZ ] ; then
                echo "do gz work"
                gunzip "$FILE_NAME"
        fi
        if [ $FILE_TYPE -eq $TAR_BZ ] ; then
                echo "do tar.bz work"
                tar xfjv "$FILE_NAME"
        fi
        if [ $FILE_TYPE -eq $BZ ] ; then
                echo "do bz work"
                bunzip2 "$FILE_NAME"
        fi

        # no handling for BZ2 or TAR.BT2 needed.

        return 255
}

## @brief       Defines what is the file ending and provide the FILE ID
## @param       $1 File name File type to scan ( ScanFielType x.tar.gz -> 2)
## @return      (int) FILE_ID 0 or TAR, TAR_GZ, GZ, TAR_BR, BZ
ScanFileType()
{
        FILE_NAME="$1"

        echo "$FILE_NAME" | grep -q -i "$TAR_STR"'$'
        if [ $? -eq 0 ] ; then return $TAR ; fi

        echo "$FILE_NAME" | grep -q -i "$TAR_GZ_STR"'$'
        if [ $? -eq 0 ] ; then return $TAR_GZ ; fi

        echo "$FILE_NAME" | grep -q -i "$GZ_STR"'$'
        if [ $? -eq 0 ] ; then return $GZ ; fi

        echo "$FILE_NAME" | grep -q -i "$TAR_BZ_STR"'$'
        if [ $? -eq 0 ] ; then return $TAR_BZ ; fi

        echo "$FILE_NAME" | grep -q -i "$TAR_BZ2_STR"'$'
        if [ $? -eq 0 ] ; then return $TAR_BZ2 ; fi

        echo "$FILE_NAME" | grep -q -i "$BZ_STR"'$'
        if [ $? -eq 0 ] ; then return $BZ ; fi

        echo "$FILE_NAME" | grep -q -i "$BZ2_STR"'$'
        if [ $? -eq 0 ] ; then return $BZ2 ; fi


        echo "Filetype not handled!"

        return 0
}

## @brief       Do the real work for unpacking
## @para1       Filename
UnpackMode(){
        FILE_NAME="$1"
        ScanFileType "$FILE_NAME"
        FILE_TYPE=$?
        DoExtract "$FILE_NAME" $FILE_TYPE
}

####################################################################
# Test Functions

## @para        p1 FILE_NAME e.g. test.tar.gz
## @para2       p2 Type to find e.g. $TAR_GZ
test_FileEndingMapping(){

        #FILE_NAME="test.tar.gz"
        FILE_NAME="$1"
        TYPE_ID="$2"

        ScanFileType "$FILE_NAME" -eq "$TYPE_ID" ;
        RET=$?

        echo -n "Test filename: " "$FILE_NAME  "

        if [ $RET -eq $TYPE_ID ]; then
                echo "ok" ;
        else
                echo "NOK";
        fi
}


tarstest(){
        echo "Test"

        test_FileEndingMapping "test.tar" $TAR
        test_FileEndingMapping "test.tar.gz" $TAR_GZ
        test_FileEndingMapping "test.gz" $GZ
        test_FileEndingMapping "test.tar.bz" $TAR_BZ
        test_FileEndingMapping "test.bz" $BZ
}
# The test function
# tarstest

####################################################################
# main
#

# SelectMode
# Check number of parameters and do action according
if [ $# -eq 0 ]
then
        # No parameter so show help
        Help
fi
if [ $# -eq 1 ]
then
        # File will be unpacked
        # One parameter so we unpack
        UnpackMode "$1"
fi
